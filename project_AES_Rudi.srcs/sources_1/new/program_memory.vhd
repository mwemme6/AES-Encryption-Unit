--###############################################################################
--# program_memory.vhd  - A generated HDL memory files
--#
--# Part of the Rudi-RV32I project
--#
--# See https://github.com/hamsternz/Rudi-RV32I
--#
--# MIT License
--#
--###############################################################################
--#
--# Copyright (c) 2020 Mike Field
--#
--# Permission is hereby granted, free of charge, to any person obtaining a copy
--# of this software and associated documentation files (the "Software"), to deal
--# in the Software without restriction, including without limitation the rights
--# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--# copies of the Software, and to permit persons to whom the Software is
--# furnished to do so, subject to the following conditions:
--#
--# The above copyright notice and this permission notice shall be included in all
--# copies or substantial portions of the Software.
--#
--# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
--# SOFTWARE.
--#
--###############################################################################
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all;

entity program_memory is
  port ( clk        : in  STD_LOGIC;
         -- Instruction interface
         pc_next    : in  STD_LOGIC_VECTOR(31 downto 0);
         instr_reg  : out STD_LOGIC_VECTOR(31 downto 0);
         -- CPU Bus interface
         bus_busy       : out STD_LOGIC;
         bus_addr       : in  STD_LOGIC_VECTOR(11 downto 2);
         bus_enable     : in  STD_LOGIC;
         bus_write_mask : in  STD_LOGIC_VECTOR(3 downto 0);
         bus_write_data : in  STD_LOGIC_VECTOR(31 downto 0);
         bus_read_data  : out STD_LOGIC_VECTOR(31 downto 0) := (others => '0'));
end entity;

architecture Behavioral of program_memory is
    
    type a_prog_memory is array (0 to 1023) of STD_LOGIC_VECTOR(31 downto 0);
    signal prog_memory : a_prog_memory := (
         0 => x"100015b7",
         1 => x"ffc58113",
         2 => x"730000ef",
         3 => x"ff5ff06f",
         4 => x"fe010113",
         5 => x"00112e23",
         6 => x"00812c23",
         7 => x"02010413",
         8 => x"fea42623",
         9 => x"100007b7",
         10 => x"0187a783",
         11 => x"fec42703",
         12 => x"00e7a023",
         13 => x"fec42783",
         14 => x"00078513",
         15 => x"01c12083",
         16 => x"01812403",
         17 => x"02010113",
         18 => x"00008067",
         19 => x"fc010113",
         20 => x"02112e23",
         21 => x"02812c23",
         22 => x"04010413",
         23 => x"00050793",
         24 => x"fcf407a3",
         25 => x"f00007b7",
         26 => x"7d878793",
         27 => x"0007a603",
         28 => x"0047a683",
         29 => x"0087a703",
         30 => x"fcc42e23",
         31 => x"fed42023",
         32 => x"fee42223",
         33 => x"00c7a703",
         34 => x"fee42423",
         35 => x"0107c783",
         36 => x"fef40623",
         37 => x"fcf44783",
         38 => x"0047d793",
         39 => x"0ff7f793",
         40 => x"ff078793",
         41 => x"008787b3",
         42 => x"fec7c783",
         43 => x"00078513",
         44 => x"570000ef",
         45 => x"fcf44783",
         46 => x"00f7f793",
         47 => x"ff078793",
         48 => x"008787b3",
         49 => x"fec7c783",
         50 => x"00078513",
         51 => x"554000ef",
         52 => x"00000013",
         53 => x"03c12083",
         54 => x"03812403",
         55 => x"04010113",
         56 => x"00008067",
         57 => x"fd010113",
         58 => x"02112623",
         59 => x"02812423",
         60 => x"03010413",
         61 => x"fca42e23",
         62 => x"fcb42c23",
         63 => x"fe042623",
         64 => x"0280006f",
         65 => x"fec42783",
         66 => x"fdc42703",
         67 => x"00f707b3",
         68 => x"0007c783",
         69 => x"00078513",
         70 => x"f35ff0ef",
         71 => x"fec42783",
         72 => x"00178793",
         73 => x"fef42623",
         74 => x"fec42703",
         75 => x"fd842783",
         76 => x"fcf74ae3",
         77 => x"00a00513",
         78 => x"4e8000ef",
         79 => x"00000013",
         80 => x"02c12083",
         81 => x"02812403",
         82 => x"03010113",
         83 => x"00008067",
         84 => x"fd010113",
         85 => x"02112623",
         86 => x"02812423",
         87 => x"03010413",
         88 => x"fca42e23",
         89 => x"fdc42783",
         90 => x"00079663",
         91 => x"fff00793",
         92 => x"0bc0006f",
         93 => x"fe042623",
         94 => x"0a40006f",
         95 => x"fec42783",
         96 => x"00279793",
         97 => x"00078713",
         98 => x"fdc42783",
         99 => x"00e787b3",
         100 => x"0007c783",
         101 => x"00078693",
         102 => x"fec42783",
         103 => x"00279793",
         104 => x"00178793",
         105 => x"fdc42703",
         106 => x"00f707b3",
         107 => x"0007c783",
         108 => x"00879793",
         109 => x"00f6e733",
         110 => x"fec42783",
         111 => x"00279793",
         112 => x"00278793",
         113 => x"fdc42683",
         114 => x"00f687b3",
         115 => x"0007c783",
         116 => x"01079793",
         117 => x"00f766b3",
         118 => x"fec42783",
         119 => x"00279793",
         120 => x"00378793",
         121 => x"fdc42703",
         122 => x"00f707b3",
         123 => x"0007c783",
         124 => x"01879713",
         125 => x"100007b7",
         126 => x"0187a603",
         127 => x"fec42783",
         128 => x"00279793",
         129 => x"00f607b3",
         130 => x"00e6e733",
         131 => x"00e7a023",
         132 => x"fec42783",
         133 => x"00178793",
         134 => x"fef42623",
         135 => x"fec42703",
         136 => x"00300793",
         137 => x"f4e7dce3",
         138 => x"00000793",
         139 => x"00078513",
         140 => x"02c12083",
         141 => x"02812403",
         142 => x"03010113",
         143 => x"00008067",
         144 => x"fd010113",
         145 => x"02112623",
         146 => x"02812423",
         147 => x"03010413",
         148 => x"fca42e23",
         149 => x"fdc42783",
         150 => x"00079663",
         151 => x"fff00793",
         152 => x"0bc0006f",
         153 => x"fe042623",
         154 => x"0a40006f",
         155 => x"fec42783",
         156 => x"00279793",
         157 => x"00078713",
         158 => x"fdc42783",
         159 => x"00e787b3",
         160 => x"0007c783",
         161 => x"00078693",
         162 => x"fec42783",
         163 => x"00279793",
         164 => x"00178793",
         165 => x"fdc42703",
         166 => x"00f707b3",
         167 => x"0007c783",
         168 => x"00879793",
         169 => x"00f6e733",
         170 => x"fec42783",
         171 => x"00279793",
         172 => x"00278793",
         173 => x"fdc42683",
         174 => x"00f687b3",
         175 => x"0007c783",
         176 => x"01079793",
         177 => x"00f766b3",
         178 => x"fec42783",
         179 => x"00279793",
         180 => x"00378793",
         181 => x"fdc42703",
         182 => x"00f707b3",
         183 => x"0007c783",
         184 => x"01879713",
         185 => x"100007b7",
         186 => x"01c7a603",
         187 => x"fec42783",
         188 => x"00279793",
         189 => x"00f607b3",
         190 => x"00e6e733",
         191 => x"00e7a023",
         192 => x"fec42783",
         193 => x"00178793",
         194 => x"fef42623",
         195 => x"fec42703",
         196 => x"00300793",
         197 => x"f4e7dce3",
         198 => x"00000793",
         199 => x"00078513",
         200 => x"02c12083",
         201 => x"02812403",
         202 => x"03010113",
         203 => x"00008067",
         204 => x"fe010113",
         205 => x"00112e23",
         206 => x"00812c23",
         207 => x"02010413",
         208 => x"100007b7",
         209 => x"0207a783",
         210 => x"00079663",
         211 => x"fff00793",
         212 => x"0440006f",
         213 => x"100007b7",
         214 => x"0207a783",
         215 => x"00100713",
         216 => x"00e7a023",
         217 => x"fe042623",
         218 => x"0100006f",
         219 => x"fec42783",
         220 => x"00178793",
         221 => x"fef42623",
         222 => x"fec42703",
         223 => x"06300793",
         224 => x"fee7d6e3",
         225 => x"100007b7",
         226 => x"0207a783",
         227 => x"0007a023",
         228 => x"00000793",
         229 => x"00078513",
         230 => x"01c12083",
         231 => x"01812403",
         232 => x"02010113",
         233 => x"00008067",
         234 => x"fe010113",
         235 => x"00112e23",
         236 => x"00812c23",
         237 => x"02010413",
         238 => x"100007b7",
         239 => x"0247a783",
         240 => x"00079663",
         241 => x"fff00793",
         242 => x"0300006f",
         243 => x"100007b7",
         244 => x"0247a783",
         245 => x"0007a783",
         246 => x"fef42623",
         247 => x"00000013",
         248 => x"100007b7",
         249 => x"0247a783",
         250 => x"0007a783",
         251 => x"0017f793",
         252 => x"fe0788e3",
         253 => x"00000793",
         254 => x"00078513",
         255 => x"01c12083",
         256 => x"01812403",
         257 => x"02010113",
         258 => x"00008067",
         259 => x"fd010113",
         260 => x"02112623",
         261 => x"02812423",
         262 => x"03010413",
         263 => x"fca42e23",
         264 => x"fdc42783",
         265 => x"00079663",
         266 => x"fff00793",
         267 => x"0d00006f",
         268 => x"fe042623",
         269 => x"0b80006f",
         270 => x"100007b7",
         271 => x"0287a703",
         272 => x"fec42783",
         273 => x"00279793",
         274 => x"00f707b3",
         275 => x"0007a783",
         276 => x"fef42423",
         277 => x"fec42783",
         278 => x"00279793",
         279 => x"00078713",
         280 => x"fdc42783",
         281 => x"00e787b3",
         282 => x"fe842703",
         283 => x"0ff77713",
         284 => x"00e78023",
         285 => x"fe842783",
         286 => x"0087d693",
         287 => x"fec42783",
         288 => x"00279793",
         289 => x"00178793",
         290 => x"fdc42703",
         291 => x"00f707b3",
         292 => x"0ff6f713",
         293 => x"00e78023",
         294 => x"fe842783",
         295 => x"0107d693",
         296 => x"fec42783",
         297 => x"00279793",
         298 => x"00278793",
         299 => x"fdc42703",
         300 => x"00f707b3",
         301 => x"0ff6f713",
         302 => x"00e78023",
         303 => x"fe842783",
         304 => x"0187d693",
         305 => x"fec42783",
         306 => x"00279793",
         307 => x"00378793",
         308 => x"fdc42703",
         309 => x"00f707b3",
         310 => x"0ff6f713",
         311 => x"00e78023",
         312 => x"fec42783",
         313 => x"00178793",
         314 => x"fef42623",
         315 => x"fec42703",
         316 => x"00300793",
         317 => x"f4e7d2e3",
         318 => x"00000793",
         319 => x"00078513",
         320 => x"02c12083",
         321 => x"02812403",
         322 => x"03010113",
         323 => x"00008067",
         324 => x"fe010113",
         325 => x"00112e23",
         326 => x"00812c23",
         327 => x"02010413",
         328 => x"fea42623",
         329 => x"feb42423",
         330 => x"fec42223",
         331 => x"fec42783",
         332 => x"00078a63",
         333 => x"fe842783",
         334 => x"00078663",
         335 => x"fe442783",
         336 => x"00079663",
         337 => x"fff00793",
         338 => x"0780006f",
         339 => x"fec42503",
         340 => x"c01ff0ef",
         341 => x"00050793",
         342 => x"00078663",
         343 => x"ffe00793",
         344 => x"0600006f",
         345 => x"fe842503",
         346 => x"cd9ff0ef",
         347 => x"00050793",
         348 => x"00078663",
         349 => x"ffd00793",
         350 => x"0480006f",
         351 => x"db5ff0ef",
         352 => x"00050793",
         353 => x"00078663",
         354 => x"ffc00793",
         355 => x"0340006f",
         356 => x"e19ff0ef",
         357 => x"00050793",
         358 => x"00078663",
         359 => x"ffb00793",
         360 => x"0200006f",
         361 => x"fe442503",
         362 => x"e65ff0ef",
         363 => x"00050793",
         364 => x"00078663",
         365 => x"ffa00793",
         366 => x"0080006f",
         367 => x"00000793",
         368 => x"00078513",
         369 => x"01c12083",
         370 => x"01812403",
         371 => x"02010113",
         372 => x"00008067",
         373 => x"ff010113",
         374 => x"00112623",
         375 => x"00812423",
         376 => x"01010413",
         377 => x"00000013",
         378 => x"100007b7",
         379 => x"00c7a783",
         380 => x"0007c783",
         381 => x"0ff7f793",
         382 => x"fe0798e3",
         383 => x"100007b7",
         384 => x"0087a783",
         385 => x"0007c783",
         386 => x"0ff7f793",
         387 => x"00078513",
         388 => x"00c12083",
         389 => x"00812403",
         390 => x"01010113",
         391 => x"00008067",
         392 => x"fe010113",
         393 => x"00112e23",
         394 => x"00812c23",
         395 => x"02010413",
         396 => x"fea42623",
         397 => x"00000013",
         398 => x"100007b7",
         399 => x"0047a783",
         400 => x"0007c783",
         401 => x"0ff7f793",
         402 => x"fe0798e3",
         403 => x"100007b7",
         404 => x"0007a783",
         405 => x"fec42703",
         406 => x"0ff77713",
         407 => x"00e78023",
         408 => x"fec42783",
         409 => x"00078513",
         410 => x"01c12083",
         411 => x"01812403",
         412 => x"02010113",
         413 => x"00008067",
         414 => x"fd010113",
         415 => x"02112623",
         416 => x"02812423",
         417 => x"03010413",
         418 => x"fca42e23",
         419 => x"fe042623",
         420 => x"02c0006f",
         421 => x"fdc42783",
         422 => x"0007c783",
         423 => x"00078513",
         424 => x"f81ff0ef",
         425 => x"fdc42783",
         426 => x"00178793",
         427 => x"fcf42e23",
         428 => x"fec42783",
         429 => x"00178793",
         430 => x"fef42623",
         431 => x"fdc42783",
         432 => x"0007c783",
         433 => x"fc0798e3",
         434 => x"fec42783",
         435 => x"00078513",
         436 => x"02c12083",
         437 => x"02812403",
         438 => x"03010113",
         439 => x"00008067",
         440 => x"fd010113",
         441 => x"02112623",
         442 => x"02812423",
         443 => x"03010413",
         444 => x"fca42e23",
         445 => x"fe042623",
         446 => x"01c0006f",
         447 => x"fdc42783",
         448 => x"00178793",
         449 => x"fcf42e23",
         450 => x"fec42783",
         451 => x"00178793",
         452 => x"fef42623",
         453 => x"fdc42783",
         454 => x"0007c783",
         455 => x"fe0790e3",
         456 => x"fec42783",
         457 => x"00078513",
         458 => x"02c12083",
         459 => x"02812403",
         460 => x"03010113",
         461 => x"00008067",
         462 => x"fc010113",
         463 => x"02112e23",
         464 => x"02812c23",
         465 => x"04010413",
         466 => x"f00007b7",
         467 => x"7f478793",
         468 => x"0007a603",
         469 => x"0047a683",
         470 => x"0087a703",
         471 => x"fec42023",
         472 => x"fed42223",
         473 => x"fee42423",
         474 => x"00c7a783",
         475 => x"fef42623",
         476 => x"f00017b7",
         477 => x"80478793",
         478 => x"0007a603",
         479 => x"0047a683",
         480 => x"0087a703",
         481 => x"fcc42823",
         482 => x"fcd42a23",
         483 => x"fce42c23",
         484 => x"00c7a783",
         485 => x"fcf42e23",
         486 => x"f00007b7",
         487 => x"7ec78513",
         488 => x"ed9ff0ef",
         489 => x"fc040693",
         490 => x"fd040713",
         491 => x"fe040793",
         492 => x"00068613",
         493 => x"00070593",
         494 => x"00078513",
         495 => x"d55ff0ef",
         496 => x"fc040793",
         497 => x"01000593",
         498 => x"00078513",
         499 => x"919ff0ef",
         500 => x"00000013",
         501 => x"f75ff06f",
         502 => x"33323130",
         503 => x"37363534",
         504 => x"42413938",
         505 => x"46454443",
         506 => x"00000000",
         507 => x"74736574",
         508 => x"00000000",
         509 => x"34333231",
         510 => x"38373635",
         511 => x"42413039",
         512 => x"46454443",
         513 => x"72636553",
         514 => x"654d7465",
         515 => x"67617373",
         516 => x"33323165",
         others => "000000000001"      & "00001" & "000" & "00001" & "0010011"   -- r01 <= r01 + 1
    );
    attribute keep      : string;
    attribute ram_style : string;
    
    signal data_valid : STD_LOGIC := '1';
begin

------------------------
-- PROGRAM ROM INTERFACE
------------------------
process(clk)
    begin
        if rising_edge(clk) then
            if pc_next(31 downto 12) = x"F0000" then 
                instr_reg <= prog_memory(to_integer(unsigned(pc_next(11 downto 2))));
            else
                instr_reg <= (others => '0');
            end if; 
        end if;
    end process;

---------------------------------------------------------
-- MAIN SYSTEM BUS INTERFACE
---------------------------------------------------------
process(bus_enable, bus_write_mask, data_valid)
begin
    bus_busy <= '0';
    if bus_enable = '1' and bus_write_mask = "0000" then
        if data_valid = '0' then
           bus_busy <= '1';
        end if;
    end if;
end process;

process(clk)
begin
    if rising_edge(clk) then
        data_valid <= '0';
        if bus_enable = '1' then
            -- Writes are ignored

            if bus_write_mask = "0000" and data_valid = '0' then
                data_valid <= '1';
            end if;
            bus_read_data <= prog_memory(to_integer(unsigned(bus_addr)));
        end if;
    end if;
end process;

end Behavioral;